generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Nft {
  id          Int    @id @default(autoincrement())
  dropId      Int
  name        String
  description String
  rarity      String
  ipfsPath    String
  s3Path      String
  tags        String
  drop        Drop   @relation(fields: [dropId], references: [id])
  users       User[] @relation("UserFavoriteNFT")
}

model Drop {
  id                  Int    @id @default(autoincrement())
  bannerImageName     String
  artistName          String
  costPerTicket       Int
  dropDescription     String
  dropName            String
  endTime             String
  lotteryId           Int
  prizeMetadataCid    String
  startTime           String
  prizes              Int    @default(0)
  bannerImageIpfsPath String
  bannerImageS3Path   String
  metadataIpfsPath    String
  metadataS3Path      String
  tags                String
  Nft                 Nft[]
}

model PrizeProof {
  lotteryId     Int
  winnerAddress String  @db.Char(42)
  prizeId       Int
  proof         String
  claimed       Boolean @default(false)

  @@id([lotteryId, winnerAddress, prizeId])
}

model Reward {
  address        String  @id @db.Char(42)
  memeETH        BigInt  @default(0)
  memeFTM        BigInt  @default(0)
  liquidityFTM   BigInt  @default(0)
  snapshotTS     Int     @default(0)
  snapshotPoints BigInt  @default(0)
  proof          String?
}

model User {
  walletAddress String   @id @db.Char(42)
  userName      String?
  email         String?  @unique
  createdAt     DateTime @default(now())
  role          Role     @default(USER)
  favorites     Nft[]    @relation("UserFavoriteNFT")
}

enum Role {
  USER
  ARTIST
  ADMIN
}
